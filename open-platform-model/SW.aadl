package SW
public
	
	thread LowLevelEthernetDriver
		features 
			-- Ethernet Frames: Raw Ethernet frames received from the physical network interface. 	  
			RawEthernetFramesRx: in data port; 
			RawEthernetFramesTx: out data port;
			EthernetFramesRx: out data port;
			EthernetFramesTx: in data port;
	end LowLevelEthernetDriver;
	
	thread implementation LowLevelEthernetDriver.Impl
		
	end LowLevelEthernetDriver.Impl;
  
  	process LowLevelEthernetDriver_seL4
  		features 
			-- Ethernet Frames: Raw Ethernet frames received from the physical network interface.
			RawEthernetFramesRx: in data port; 
			RawEthernetFramesTx: out data port;
			EthernetFramesRx: out data port;
			EthernetFramesTx: in data port;			
  	end LowLevelEthernetDriver_seL4;
  	
  	process implementation LowLevelEthernetDriver_seL4.Impl
  		subcomponents
  			LowLevelEthernetDriver: thread LowLevelEthernetDriver.Impl;
  		connections
  			c1: port RawEthernetFramesRx -> LowLevelEthernetDriver.RawEthernetFramesRx;
  			c2: port EthernetFramesTx -> LowLevelEthernetDriver.EthernetFramesTx;
  			c3: port LowLevelEthernetDriver.RawEthernetFramesTx -> RawEthernetFramesTx;
  			c4: port LowLevelEthernetDriver.EthernetFramesRx -> EthernetFramesRx;
  	end LowLevelEthernetDriver_seL4.Impl;
  	
  	thread TxVirt
  		features
  			ARP: in event data port;
  			Input: in event data port;
  			Output: out event data port;
  	end TxVirt;
  	
  	thread implementation TxVirt.Impl
  		
  	end TxVirt.Impl;
  	
  	process TxVirt_seL4
  		features
  			ARP: in event data port;
  			Input: in event data port;
  			Output: out event data port;
  	end TxVirt_seL4;
  
  	process implementation TxVirt_seL4.Impl
  		subcomponents
  			TxVirt: thread TxVirt.Impl;
  		connections
  			c1: port ARP -> TxVirt.ARP;
  			c2: port Input -> TxVirt.Input;
  			c3: port TxVirt.Output -> Output;
  	end TxVirt_seL4.Impl;
  
  
  	thread RxVirt
  		features
  			Input: in event data port;
  			ARP: out event data port;
  			Output: out event data port;
  	end RxVirt;
  
  	thread implementation RxVirt.Impl
  		
  	end RxVirt.Impl;
  
  	process RxVirt_seL4
  		features
  			Input: in event data port;
  			ARP: out event data port;
  			Output: out event data port;
  	end RxVirt_seL4;
  	
  	process implementation RxVirt_seL4.Impl
  		subcomponents
  			RxVirt: thread RxVirt.Impl;
  		connections
  			c1: port Input -> RxVirt.Input;
  			c2: port RxVirt.ARP -> ARP;
  			c3: port RxVirt.Output -> Output;
  	end RxVirt_seL4.Impl;
  	
  	thread ARP
  		features
  			Input: in event data port;
  			Output: out event data port;
  	end ARP;
  
  	thread implementation ARP.Impl
  		
  	end ARP.Impl;
  
  	process ARP_seL4
  		features
  			Input: in event data port;
  			Output: out event data port;
  	end ARP_seL4;
  
  	process implementation ARP_seL4.Impl
  		subcomponents
  			ARP: thread ARP.Impl;
  		connections
  			c1: port Input -> ARP.Input;
  			c2: port ARP.Output -> Output;
  	end ARP_seL4.Impl;
  
	thread EthernetStack
		features 
			EthernetFramesRxIn: in data port;
			EthernetFramesTxIn: in data port;
			EthernetFramesRxOut: out data port;
			EthernetFramesTxOut: out data port;
	end EthernetStack;
	
	thread implementation EthernetStack.Impl
		
	end EthernetStack.Impl;
	
	process EthernetStack_seL4
		features 
			EthernetFramesRxIn: in data port;
			EthernetFramesTxIn: in data port;
			EthernetFramesRxOut: out data port;
			EthernetFramesTxOut: out data port;
	end EthernetStack_seL4;
	
	process implementation EthernetStack_seL4.Impl
		subcomponents
			EthernetStack: thread EthernetStack.Impl;
		connections
			c1: port EthernetFramesRxIn -> EthernetStack.EthernetFramesRxIn;
			c2: port EthernetFramesTxIn -> EthernetStack.EthernetFramesTxIn;
			c3: port EthernetStack.EthernetFramesRxOut -> EthernetFramesRxOut;
			c4: port EthernetStack.EthernetFramesTxOut -> EthernetFramesTxOut;
	end EthernetStack_seL4.Impl;  
  
	system VMM
		features
			-- Virtio-net presents a virtual network interface to the operating system and applications running inside a VM. 
			VirtioNetRx: in data port;
			VirtioNetTx: out data port;
	end VMM;
	
	system implementation VMM.Impl
		subcomponents
			Ardupilot: system Ardupilot.Impl;
		connections
			c1: port VirtioNetRx -> Ardupilot.ethernetFramesRx;
			c2: port Ardupilot.ethernetFramesTx -> VirtioNetTx;
	end VMM.Impl;
	
	system ArduPilot
		features
			EthernetFramesRx: in data port;
			EthernetFramesTx: out data port;
	end ArduPilot;
	
	system implementation ArduPilot.Impl
		
	end ArduPilot.Impl;
		
	system seL4
		features
		-- Ethernet Frames: Raw Ethernet frames received from the physical network interface.
  		EthernetFramesRx: in data port; 
  		EthernetFramesTx: out data port;
	end seL4;
	
	system implementation seL4.Virtualize
		subcomponents
			VMM: system VMM.impl;
		connections	
			c1: port EthernetFramesRx -> VMM.VirtioNetRx;
			c2: port VMM.VirtioNetTx -> ethernetFramesTx;
	end seL4.Virtualize;
	
	system implementation seL4.IsolateEthernet
		subcomponents
			LowLevelEthernetDriver: process LowLevelEthernetDriver_seL4.Impl;
			RxVirt: process RxVirt_seL4.Impl;
			TxVirt: process TxVirt_seL4.Impl;
			ARP: process ARP_seL4.Impl;
			EthernetStack: process EthernetStack_seL4.Impl;
			VMM: system VMM.impl;
		connections	
			-- Incoming traffic
			c1: port ethernetFramesRx -> LowLevelEthernetDriver.RawEthernetFramesRx;
			c2: port LowLevelEthernetDriver.ethernetFramesRx -> RxVirt.Input;
			c3: port RxVirt.ARP -> ARP.Input;
			c4: port RxVirt.Output -> EthernetStack.EthernetFramesRxIn;
			c5: port EthernetStack.EthernetFramesRxOut -> VMM.VirtioNetRx;
			-- Outgoing traffic
			c6: port VMM.VirtioNetTx -> EthernetStack.EthernetFramesTxIn;
			c7: port EthernetStack.EthernetFramesTxOut -> TxVirt.Input;
			c8: port ARP.Output -> TxVirt.ARP;
			c9: port TxVirt.Output -> LowLevelEthernetDriver.EthernetFramesTx;
			c10: port LowLevelEthernetDriver.RawEthernetFramesTx -> EthernetFramesTx;
	end seL4.IsolateEthernet;
	
end SW;