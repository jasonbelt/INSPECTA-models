#pragma once

#include <printf.h>
#include <util.h>
#include <stdint.h>
#include <microkit.h>
#include <sb_types.h>

// Do not edit this file as it will be overwritten if codegen is rerun


bool myBoolean_is_empty(void);
bool get_myBoolean_poll(sb_event_counter_t *numDropped, bool *data);
bool get_myBoolean(bool *data);
bool myCharacter_is_empty(void);
bool get_myCharacter_poll(sb_event_counter_t *numDropped, char *data);
bool get_myCharacter(char *data);
bool myString_is_empty(void);
bool get_myString_poll(sb_event_counter_t *numDropped, Base_Types_String *data);
bool get_myString(Base_Types_String *data);
bool myInt8_is_empty(void);
bool get_myInt8_poll(sb_event_counter_t *numDropped, int8_t *data);
bool get_myInt8(int8_t *data);
bool myInt16_is_empty(void);
bool get_myInt16_poll(sb_event_counter_t *numDropped, int16_t *data);
bool get_myInt16(int16_t *data);
bool myInt32_is_empty(void);
bool get_myInt32_poll(sb_event_counter_t *numDropped, int32_t *data);
bool get_myInt32(int32_t *data);
bool myInt64_is_empty(void);
bool get_myInt64_poll(sb_event_counter_t *numDropped, int64_t *data);
bool get_myInt64(int64_t *data);
bool myUInt8_is_empty(void);
bool get_myUInt8_poll(sb_event_counter_t *numDropped, uint8_t *data);
bool get_myUInt8(uint8_t *data);
bool myUInt16_is_empty(void);
bool get_myUInt16_poll(sb_event_counter_t *numDropped, uint16_t *data);
bool get_myUInt16(uint16_t *data);
bool myUInt32_is_empty(void);
bool get_myUInt32_poll(sb_event_counter_t *numDropped, uint32_t *data);
bool get_myUInt32(uint32_t *data);
bool myUInt64_is_empty(void);
bool get_myUInt64_poll(sb_event_counter_t *numDropped, uint64_t *data);
bool get_myUInt64(uint64_t *data);
bool myFloat32_is_empty(void);
bool get_myFloat32_poll(sb_event_counter_t *numDropped, float *data);
bool get_myFloat32(float *data);
bool myFloat64_is_empty(void);
bool get_myFloat64_poll(sb_event_counter_t *numDropped, double *data);
bool get_myFloat64(double *data);
bool myEnum_is_empty(void);
bool get_myEnum_poll(sb_event_counter_t *numDropped, Aadl_Datatypes_MyEnum *data);
bool get_myEnum(Aadl_Datatypes_MyEnum *data);
bool myStruct_is_empty(void);
bool get_myStruct_poll(sb_event_counter_t *numDropped, Aadl_Datatypes_MyStruct_i *data);
bool get_myStruct(Aadl_Datatypes_MyStruct_i *data);
bool myArray1_is_empty(void);
bool get_myArray1_poll(sb_event_counter_t *numDropped, Aadl_Datatypes_MyArrayOneDim *data);
bool get_myArray1(Aadl_Datatypes_MyArrayOneDim *data);
