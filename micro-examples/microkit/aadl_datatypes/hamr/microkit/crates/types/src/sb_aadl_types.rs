#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]

// Do not edit this file as it will be overwritten if codegen is rerun

#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum base_Aadl_Datatypes_MyEnum_Type {
  On = 0,
  Off = 1
}

#[repr(C)]
#[derive(Debug, Clone, Copy)]
pub struct base_Aadl_Datatypes_MyStruct2_i {
  pub fieldSChar: cty::c_char
}

pub const String_SIZE: usize = 43;
pub const String_DIM: usize = 43;

pub type String = [cty::c_char; String_DIM];

pub const base_Aadl_Datatypes_MyArrayOneDim_SIZE: usize = 40;
pub const base_Aadl_Datatypes_MyArrayOneDim_DIM: usize = 10;

pub type base_Aadl_Datatypes_MyArrayOneDim = [cty::int32_t; base_Aadl_Datatypes_MyArrayOneDim_DIM];

#[repr(C)]
#[derive(Debug, Clone, Copy)]
pub struct base_Aadl_Datatypes_MyStruct_i {
  pub fieldInt64: cty::int64_t,
  pub fieldStr: String,
  pub fieldEnum: base_Aadl_Datatypes_MyEnum_Type,
  pub fieldRec: base_Aadl_Datatypes_MyStruct2_i,
  pub fieldArray: base_Aadl_Datatypes_MyArrayOneDim
}
