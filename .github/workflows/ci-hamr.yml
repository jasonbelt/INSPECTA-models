name: HAMR-codegen

on: 
  workflow_dispatch:
  push:
    paths:
      - 'micro-examples/microkit/**'
      - 'isolette/**'
  schedule:
    - cron: "0 2 * * 6" # every sunday at 2am      
jobs:
  container:
    runs-on: ubuntu-latest
    container:
      image: jasonbelt/microkit_domain_scheduling
    name: HAMR-codegen
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: inspecta
          submodules: recursive
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: kekinian
          repository: sireum/kekinian
          submodules: recursive
      - name: Cache Java
        id: cache-java
        uses: actions/cache@v4
        with:
          path: kekinian/bin/linux/java
          key: ${{ runner.os }}-${{ hashFiles('kekinian/versions.properties') }}-java
      - name: Cache Scala
        id: cache-scala
        uses: actions/cache@v4
        with:
          path: kekinian/bin/scala
          key: ${{ runner.os }}-${{ hashFiles('kekinian/versions.properties') }}-scala
      - name: Cache Coursier
        id: cache-coursier
        uses: actions/cache@v4
        with:
          path: kekinian/cache/coursier
          key: ${{ runner.os }}-${{ hashFiles('kekinian/versions.properties') }}-coursier
      - name: Cache OSATE
        id: cache-osate
        uses: actions/cache@v4
        with:
          path: kekinian/bin/linux/osate
          key: ${{ runner.os }}-${{ hashFiles('kekinian/hamr/codegen/jvm/src/main/resources/phantom_versions.properties') }}-osate
      - name: Build
        run: |
          # get the location of the microkit sdk inside the container.  The ci scripts 
          # require MICROKIT_SDK be set in order to build the seL4 images
          export MICROKIT_SDK=$(find /home/microkit/microkit/release/ -type d -name microkit-sdk*)
          export MICROKIT_BOARD=qemu_virt_aarch64

          export HOME=$(pwd)

          export SIREUM_HOME=$HOME/kekinian
          export PATH=$SIREUM_HOME/bin:$PATH

          $SIREUM_HOME/bin/build.cmd setup
          rm -rf $SIREUM_HOME/out
          
          sireum

          sireum slang run $SIREUM_HOME/hamr/codegen/bin/build.cmd install-osate-gumbo
          export OSATE_HOME=$SIREUM_HOME/bin/linux/osate

          $HOME/inspecta/.github/workflows/hamr-ci.cmd
