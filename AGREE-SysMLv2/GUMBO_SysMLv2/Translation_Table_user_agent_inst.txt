| Gumbo Rule                                                                                   | Translation Rule / SysML v2 Element                                                                                      | Explanation / Idiom                                                                                                 |             |                    |                                          |
| -------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------- | ----------- | ------------------ | ---------------------------------------- |
| `integration_section` with `named_assume_statement`                                          | `constraint def MonitorIntegration` combining all assumptions (and any guarantees) into `(assumes) implies (guarantees)` | Integration assumptions are conjoined and used as the antecedent for a single implication constraint.               |             |                    |                                          |
| `initialize_section` with `named_guarantee_statement`                                        | `constraint def InitializeContract` containing the conjunction of guarantees                                             | Initialization guarantees produce one constraint representing initialization requirements.                          |             |                    |                                          |
| `compute_section` with `case_statement` → `anon_assume_statement`/`anon_guarantee_statement` | For each case ID, a `constraint def <CaseID>` block: `(assumes) implies (guarantees)`                                    | Each compute case becomes a separate constraint definition. The case description is emitted as a preceding comment. |             |                    |                                          |
| `not_expr`                                                                                   | `!` prefix in expression                                                                                                 | Gumbo’s `not` maps to SysML’s logical negation.                                                                     |             |                    |                                          |
| `or_expr`                                                                                    | \`                                                                                                                       |                                                                                                                     | \` operator | Gumbo `or` (and \` | \`) are converted to SysML’s logical OR. |
| `and_expr`                                                                                   | `&&` operator                                                                                                            | Gumbo `and` (and `&`) are converted to SysML’s logical AND.                                                         |             |                    |                                          |
| `implication_expr`                                                                           | `implies` keyword                                                                                                        | Chains of `implies` produce nested SysML `implies` expressions.                                                     |             |                    |                                          |

