// #Sireum

package base.SW

import org.sireum._
import base._
import base.util.Container

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// containers for the pre and post state values of ports and state variables

@sig trait Firewall_Impl_seL4_Firewall_Firewall_PreState_Container extends Container {
  def api_EthernetFramesRxIn: Option[SW.StructuredEthernetMessage_i]
  def api_EthernetFramesTxIn: Option[SW.StructuredEthernetMessage_i]
}

// container for incoming ports
@datatype class Firewall_Impl_seL4_Firewall_Firewall_PreState_Container_P (
  val api_EthernetFramesRxIn: Option[SW.StructuredEthernetMessage_i],
  val api_EthernetFramesTxIn: Option[SW.StructuredEthernetMessage_i]) extends Firewall_Impl_seL4_Firewall_Firewall_PreState_Container

// container for incoming ports and state variables
@datatype class Firewall_Impl_seL4_Firewall_Firewall_PreState_Container_PS (
  val api_EthernetFramesRxIn: Option[SW.StructuredEthernetMessage_i],
  val api_EthernetFramesTxIn: Option[SW.StructuredEthernetMessage_i]) extends Firewall_Impl_seL4_Firewall_Firewall_PreState_Container

@sig trait Firewall_Impl_seL4_Firewall_Firewall_PostState_Container extends Container {
  def api_EthernetFramesRxOut: Option[SW.StructuredEthernetMessage_i]
  def api_EthernetFramesTxOut: Option[SW.StructuredEthernetMessage_i]
}

// container for outgoing ports
@datatype class Firewall_Impl_seL4_Firewall_Firewall_PostState_Container_P (
  val api_EthernetFramesRxOut: Option[SW.StructuredEthernetMessage_i],
  val api_EthernetFramesTxOut: Option[SW.StructuredEthernetMessage_i]) extends Firewall_Impl_seL4_Firewall_Firewall_PostState_Container

// container for outgoing ports and state variables
@datatype class Firewall_Impl_seL4_Firewall_Firewall_PostState_Container_PS (
  val api_EthernetFramesRxOut: Option[SW.StructuredEthernetMessage_i],
  val api_EthernetFramesTxOut: Option[SW.StructuredEthernetMessage_i]) extends Firewall_Impl_seL4_Firewall_Firewall_PostState_Container
