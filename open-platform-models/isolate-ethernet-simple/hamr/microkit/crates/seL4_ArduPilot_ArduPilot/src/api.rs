#![allow(dead_code)]
#![allow(non_snake_case)]

// Do not edit this file as it will be overwritten if codegen is rerun

use types::*;

extern "C" {
  pub fn put_EthernetFramesTx(data: *mut base_SW_StructuredEthernetMessage_i) -> bool;
  pub fn EthernetFramesRx_is_empty() -> bool;
  pub fn get_EthernetFramesRx_poll(num_dropped: *mut sb_event_counter_t, data: *mut base_SW_StructuredEthernetMessage_i);
  pub fn get_EthernetFramesRx(data: *mut base_SW_StructuredEthernetMessage_i) -> bool;
}

pub fn unsafe_put_EthernetFramesTx(data: *mut base_SW_StructuredEthernetMessage_i) -> bool {
  return unsafe { put_EthernetFramesTx(data) };
}

pub fn unsafe_EthernetFramesRx_is_empty() -> bool {
  return unsafe { EthernetFramesRx_is_empty() };
}

pub fn unsafe_get_EthernetFramesRx_poll(num_dropped: *mut sb_event_counter_t, data: *mut base_SW_StructuredEthernetMessage_i) {
  return unsafe { get_EthernetFramesRx_poll(num_dropped, data) };
}

pub fn unsafe_get_EthernetFramesRx(data: *mut base_SW_StructuredEthernetMessage_i) -> bool {
  return unsafe { get_EthernetFramesRx(data) };
}
