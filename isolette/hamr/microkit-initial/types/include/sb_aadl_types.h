#pragma once

#include <stdbool.h>
#include <stdint.h>

// Do not edit this file as it will be overwritten if codegen is rerun

typedef struct base_Isolette_Data_Model_PhysicalTemp_i base_Isolette_Data_Model_PhysicalTemp_i;

typedef struct base_Isolette_Data_Model_TempWstatus_i base_Isolette_Data_Model_TempWstatus_i;

typedef struct base_Isolette_Data_Model_Temp_i base_Isolette_Data_Model_Temp_i;

typedef struct base_Isolette_Data_Model_Failure_Flag_i base_Isolette_Data_Model_Failure_Flag_i;

typedef
  enum {Dummy_Air_Interaction_Enum} base_Isolette_Environment_Air_Interaction_Type;

typedef
  enum {Dummy_Interface_Interaction_Enum} base_Isolette_Environment_Interface_Interaction_Type;

typedef
  enum {Dummy_Head_Enum} base_Isolette_Environment_Heat_Type;

typedef
  enum {Init_Monitor_Mode, Normal_Monitor_Mode, Failed_Monitor_Mode} base_Isolette_Data_Model_Monitor_Mode_Type;

typedef
  enum {Init_Regulator_Mode, Normal_Regulator_Mode, Failed_Regulator_Mode} base_Isolette_Data_Model_Regulator_Mode_Type;

typedef
  enum {Init_Status, On_Status, Failed_Status} base_Isolette_Data_Model_Status_Type;

typedef
  enum {Valid, Invalid} base_Isolette_Data_Model_ValueStatus_Type;

typedef
  enum {Onn, Off} base_Isolette_Data_Model_On_Off_Type;

struct base_Isolette_Data_Model_PhysicalTemp_i {
  float degrees;
};

struct base_Isolette_Data_Model_TempWstatus_i {
  float degrees;
  base_Isolette_Data_Model_ValueStatus_Type status;
};

struct base_Isolette_Data_Model_Temp_i {
  float degrees;
};

struct base_Isolette_Data_Model_Failure_Flag_i {
  bool flag;
};
