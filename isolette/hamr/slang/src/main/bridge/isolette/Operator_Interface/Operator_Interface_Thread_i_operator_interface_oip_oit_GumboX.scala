// #Sireum

package isolette.Operator_Interface

import org.sireum._
import isolette._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun
object Operator_Interface_Thread_i_operator_interface_oip_oit_GumboX {
  /** I-Guar: Integration constraint on oit's outgoing data port lower_alarm_tempWstatus
    *
    * guarantee Table_A_12_LowerAlarmTemp
    *   Range [96..101]
    *   http://pub.santoslab.org/high-assurance/module-requirements/reading/FAA-DoT-Requirements-AR-08-32.pdf#page=112 
    */
  @strictpure def I_Guar_lower_alarm_tempWstatus(lower_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_i): B =
    96.0f <= lower_alarm_tempWstatus.value &&
      lower_alarm_tempWstatus.value <= 101.0f

  // I_Guar-Guard: Integration constraint on oit's outgoing data port lower_alarm_tempWstatus
  @strictpure def I_Guar_Guard_lower_alarm_tempWstatus(lower_alarm_tempWstatus: Option[Isolette_Data_Model.TempWstatus_i]): B =
    lower_alarm_tempWstatus.nonEmpty -->: I_Guar_lower_alarm_tempWstatus(lower_alarm_tempWstatus.get)

  /** I-Guar: Integration constraint on oit's outgoing data port upper_alarm_tempWstatus
    *
    * guarantee Table_A_12_UpperAlarmTemp
    *   Range [97..102]
    *   http://pub.santoslab.org/high-assurance/module-requirements/reading/FAA-DoT-Requirements-AR-08-32.pdf#page=112 
    */
  @strictpure def I_Guar_upper_alarm_tempWstatus(upper_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_i): B =
    97.0f <= upper_alarm_tempWstatus.value &&
      upper_alarm_tempWstatus.value <= 102.0f

  // I_Guar-Guard: Integration constraint on oit's outgoing data port upper_alarm_tempWstatus
  @strictpure def I_Guar_Guard_upper_alarm_tempWstatus(upper_alarm_tempWstatus: Option[Isolette_Data_Model.TempWstatus_i]): B =
    upper_alarm_tempWstatus.nonEmpty -->: I_Guar_upper_alarm_tempWstatus(upper_alarm_tempWstatus.get)

  /** IEP-Post: Initialize Entrypoint Post-Condition
    *
    * @param api_lower_alarm_tempWstatus outgoing data port
    * @param api_lower_desired_tempWstatus outgoing data port
    * @param api_upper_alarm_tempWstatus outgoing data port
    * @param api_upper_desired_tempWstatus outgoing data port
    */
  @strictpure def inititialize_IEP_Post (
      api_lower_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_i,
      api_lower_desired_tempWstatus: Isolette_Data_Model.TempWstatus_i,
      api_upper_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_i,
      api_upper_desired_tempWstatus: Isolette_Data_Model.TempWstatus_i): B =
    (// I-Guar-Guard: Integration constraints for oit's outgoing ports"
     I_Guar_lower_alarm_tempWstatus(api_lower_alarm_tempWstatus) &
     I_Guar_upper_alarm_tempWstatus(api_upper_alarm_tempWstatus))

  /** IEP-Post: Initialize Entrypoint Post-Condition via container
    *
    * @param post Container holding the value of incoming ports and the pre-state values of state variables
    */
  @strictpure def inititialize_IEP_Post_Container (post: Operator_Interface_Thread_i_operator_interface_oip_oit_PostState_Container_PS): B =
    inititialize_IEP_Post (
      api_lower_alarm_tempWstatus = post.api_lower_alarm_tempWstatus,
      api_lower_desired_tempWstatus = post.api_lower_desired_tempWstatus,
      api_upper_alarm_tempWstatus = post.api_upper_alarm_tempWstatus,
      api_upper_desired_tempWstatus = post.api_upper_desired_tempWstatus)

  /** CEP-Post: Compute Entrypoint Post-Condition for oit
    *
    * @param api_alarm_control incoming data port
    * @param api_display_temperature incoming data port
    * @param api_monitor_status incoming data port
    * @param api_regulator_status incoming data port
    * @param api_lower_alarm_tempWstatus outgoing data port
    * @param api_lower_desired_tempWstatus outgoing data port
    * @param api_upper_alarm_tempWstatus outgoing data port
    * @param api_upper_desired_tempWstatus outgoing data port
    */
  @strictpure def compute_CEP_Post (
      api_alarm_control: Isolette_Data_Model.On_Off.Type,
      api_display_temperature: Isolette_Data_Model.Temp_i,
      api_monitor_status: Isolette_Data_Model.Status.Type,
      api_regulator_status: Isolette_Data_Model.Status.Type,
      api_lower_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_i,
      api_lower_desired_tempWstatus: Isolette_Data_Model.TempWstatus_i,
      api_upper_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_i,
      api_upper_desired_tempWstatus: Isolette_Data_Model.TempWstatus_i): B =
    (// I-Guar-Guard: Integration constraints for oit's outgoing ports
     I_Guar_lower_alarm_tempWstatus(api_lower_alarm_tempWstatus) & 
     I_Guar_upper_alarm_tempWstatus(api_upper_alarm_tempWstatus))

  /** CEP-Post: Compute Entrypoint Post-Condition for oit via containers
    *
    * @param pre Container holding the values of incoming ports and the pre-state values of state variables
    * @param post Container holding the values of outgoing ports and the post-state values of state variables
    */
  @strictpure def compute_CEP_Post_Container(
      pre: Operator_Interface_Thread_i_operator_interface_oip_oit_PreState_Container_PS,
      post: Operator_Interface_Thread_i_operator_interface_oip_oit_PostState_Container_PS): B =
    compute_CEP_Post(
      api_alarm_control = pre.api_alarm_control,
      api_display_temperature = pre.api_display_temperature,
      api_monitor_status = pre.api_monitor_status,
      api_regulator_status = pre.api_regulator_status,
      api_lower_alarm_tempWstatus = post.api_lower_alarm_tempWstatus,
      api_lower_desired_tempWstatus = post.api_lower_desired_tempWstatus,
      api_upper_alarm_tempWstatus = post.api_upper_alarm_tempWstatus,
      api_upper_desired_tempWstatus = post.api_upper_desired_tempWstatus)
}
