package Operator_Interface
public
	with Abstract_Definitions;
	with Case_Scheduling;
	with Isolette_Data_Model;
	with Isolette_Environment; -- import type definitions used in Isolette
-- =====================================================================================================================
--
--   O p e r a t o r     I n t e r f a c e
-- 
--   See Section A-5 and Figure A-2
--
-- =====================================================================================================================
-- -----------------------------------------------------------------------------
--    O p e r a t o r    I n t e r f a c e    I n t e r f a c e
-- -----------------------------------------------------------------------------
--@description operator interface system component type
	system Operator_Interface
		features
			-- ======== INPUT from Operator to Operator Interface =======		
			operator_commands: in data port Isolette_Environment::Interface_Interaction;
			-- ======== OUTPUT from Operator Interface to Operator  =======	
			-- models (abstractly) visual information presented to the operator on Isolette operator interface
			operator_visual_information: out data port Isolette_Environment::Interface_Interaction;
			-- models (abstraction) audio information presented to the operator on Isolette operator interface
			operator_alarm: out data port Isolette_Environment::Interface_Interaction;
			-- models (abstractly) the sensing of the physical air temperature
			-- ==== INPUTS from thermostat to operator interface 
			regulator_status: in data port Isolette_Data_Model::Status;
			monitor_status: in data port Isolette_Data_Model::Status;
			display_temperature: in data port Isolette_Data_Model::Temp.i;
			alarm_control: in data port Isolette_Data_Model::On_Off;

			-- ==== OUTPUTS from operator interface to thermostat 
			lower_desired_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			upper_desired_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			lower_alarm_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			upper_alarm_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
	end Operator_Interface;

	system implementation Operator_Interface.i
		subcomponents
			oip: process operator_interface_process.i;
		connections
			c1: port regulator_status -> oip.regulator_status;
			c2: port monitor_status -> oip.monitor_status;
			c3: port display_temperature -> oip.display_temperature;
			c4: port alarm_control -> oip.alarm_control;

			c5: port oip.lower_desired_tempWstatus -> lower_desired_tempWstatus;
			c6: port oip.upper_desired_tempWstatus -> upper_desired_tempWstatus;
			c7: port oip.lower_alarm_tempWstatus -> lower_alarm_tempWstatus;
			c8: port oip.upper_alarm_tempWstatus -> upper_alarm_tempWstatus;

	end Operator_Interface.i;

	process Operator_Interface_Process
		features
			-- ==== INPUTS from thermostat to operator interface
			regulator_status: in data port Isolette_Data_Model::Status;
			monitor_status: in data port Isolette_Data_Model::Status;
			display_temperature: in data port Isolette_Data_Model::Temp.i;
			alarm_control: in data port Isolette_Data_Model::On_Off;

			-- ==== OUTPUTS from operator interface to thermostat 
			lower_desired_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			upper_desired_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			lower_alarm_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			upper_alarm_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			
		properties
			CASE_Scheduling::Domain => Isolette_Properties::Domain_OI;
			
	end Operator_Interface_Process;

	process implementation Operator_Interface_Process.i
		subcomponents
			oit: thread operator_interface_thread.i;
		connections
			c1: port regulator_status -> oit.regulator_status;
			c2: port monitor_status -> oit.monitor_status;
			c3: port display_temperature -> oit.display_temperature;
			c4: port alarm_control -> oit.alarm_control;

			c5: port oit.lower_desired_tempWstatus -> lower_desired_tempWstatus;
			c6: port oit.upper_desired_tempWstatus -> upper_desired_tempWstatus;
			c7: port oit.lower_alarm_tempWstatus -> lower_alarm_tempWstatus;
			c8: port oit.upper_alarm_tempWstatus -> upper_alarm_tempWstatus;
	end Operator_Interface_Process.i;

	thread Operator_Interface_Thread extends Abstract_Definitions::Periodic_Thread
		features
			-- ==== INPUTS from thermostat to operator interface
			regulator_status: in data port Isolette_Data_Model::Status;
			monitor_status: in data port Isolette_Data_Model::Status;
			display_temperature: in data port Isolette_Data_Model::Temp.i;
			alarm_control: in data port Isolette_Data_Model::On_Off;

			-- ==== OUTPUTS from operator interface to thermostat 
			lower_desired_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			upper_desired_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			lower_alarm_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
			upper_alarm_tempWstatus: out data port Isolette_Data_Model::TempWstatus.i;
		annex GUMBO {**
			
			integration
			
				guarantee Table_A_12_LowerAlarmTemp "Range [96..101]
													|http://pub.santoslab.org/high-assurance/module-requirements/reading/FAA-DoT-Requirements-AR-08-32.pdf#page=112 " :
					96.0f <= lower_alarm_tempWstatus.value && lower_alarm_tempWstatus.value <= 101.0f;
				
				guarantee Table_A_12_UpperAlarmTemp "Range [97..102]
												|http://pub.santoslab.org/high-assurance/module-requirements/reading/FAA-DoT-Requirements-AR-08-32.pdf#page=112 " :
					97.0f <= upper_alarm_tempWstatus.value && upper_alarm_tempWstatus.value <= 102.0f;
		**};
	end Operator_Interface_Thread;

	thread implementation Operator_Interface_Thread.i
	end Operator_Interface_Thread.i;
	
end Operator_Interface;