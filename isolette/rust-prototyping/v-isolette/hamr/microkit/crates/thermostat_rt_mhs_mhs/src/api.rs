#![allow(dead_code)]
#![allow(non_snake_case)]

// Do not edit this file as it will be overwritten if codegen is rerun

use crate::types::sb_aadl_types::*;

extern "C" {
  pub fn get_upper_desired_temp(data: *mut isolette_Isolette_Data_Model_Temp_i) -> bool;
  pub fn get_lower_desired_temp(data: *mut isolette_Isolette_Data_Model_Temp_i) -> bool;
  pub fn put_heat_control(data: *mut isolette_Isolette_Data_Model_On_Off_Type) -> bool;
  pub fn get_regulator_mode(data: *mut isolette_Isolette_Data_Model_Regulator_Mode_Type) -> bool;
  pub fn get_current_tempWstatus(data: *mut isolette_Isolette_Data_Model_TempWstatus_i) -> bool;
}

pub fn unsafe_get_upper_desired_temp(data: *mut isolette_Isolette_Data_Model_Temp_i) -> bool {
  return unsafe { get_upper_desired_temp(data) };
}

pub fn unsafe_get_lower_desired_temp(data: *mut isolette_Isolette_Data_Model_Temp_i) -> bool {
  return unsafe { get_lower_desired_temp(data) };
}

pub fn unsafe_put_heat_control(data: *mut isolette_Isolette_Data_Model_On_Off_Type) -> bool {
  return unsafe { put_heat_control(data) };
}

pub fn unsafe_get_regulator_mode(data: *mut isolette_Isolette_Data_Model_Regulator_Mode_Type) -> bool {
  return unsafe { get_regulator_mode(data) };
}

pub fn unsafe_get_current_tempWstatus(data: *mut isolette_Isolette_Data_Model_TempWstatus_i) -> bool {
  return unsafe { get_current_tempWstatus(data) };
}
