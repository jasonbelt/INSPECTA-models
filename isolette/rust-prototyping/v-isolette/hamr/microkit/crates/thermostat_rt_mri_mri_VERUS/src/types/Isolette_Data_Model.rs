#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]

// Do not edit this file as it will be overwritten if codegen is rerun

use vstd::prelude::*;

verus! {
  
#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum ValueStatus {
  Valid = 0,
  Invalid = 1
}

#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Regulator_Mode {
  Init_Regulator_Mode = 0,
  Normal_Regulator_Mode = 1,
  Failed_Regulator_Mode = 2
}

impl Default for Regulator_Mode {
  fn default() -> Self {
      Regulator_Mode::Init_Regulator_Mode
  }
}

#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Status {
  Init_Status = 0,
  On_Status = 1,
  Failed_Status = 2
}

#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum On_Off {
  Onn = 0,
  Off = 1
}

#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum Monitor_Mode {
  Init_Monitor_Mode = 0,
  Normal_Monitor_Mode = 1,
  Failed_Monitor_Mode = 2
}


#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq)]
pub struct Temp_i {
  //pub degrees: cty::uint32_t
  pub degrees: i32
}

impl Default for Temp_i {
  fn default() -> Self {
      Self { degrees: 0 }
  }
}

#[repr(C)]
#[derive(Debug, Clone, Copy)]
pub struct PhysicalTemp_i {
  //pub degrees: cty::uint32_t
  pub degrees: i32
}

#[repr(C)]
#[derive(Debug, Clone, Copy)]
pub struct TempWstatus_i {
  //pub degrees: cty::uint32_t,
  pub degrees: i32,
  pub status: ValueStatus
}

impl Default for TempWstatus_i {
  fn default() -> Self {
      Self { degrees: 0, status: ValueStatus::Valid }
  }
}

#[repr(C)]
#[derive(Debug, Clone, Copy, PartialEq)]
pub struct Failure_Flag_i {
  pub flag: bool
}

impl Default for Failure_Flag_i {
  fn default() -> Self {
      Self { flag: false }
  }
}
}